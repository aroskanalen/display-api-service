---
resources:
  App\Entity\User:
    attributes:
      security: 'is_granted("ROLE_ADMIN") or is_granted("ROLE_EXTERNAL_USER_ADMIN")'
      input: App\Dto\UserInput
      output: App\Dto\UserOutput
    itemOperations:
      get:
        path: '/users/{id}'
        openapi_context:
          description: Retrieves User resource.
          summary: Retrieve User resource.
          operationId: get-v1-user-id
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true
          responses:
            '200':
              description: OK
              content:
                application/ld+json:
                  examples:
              headers: { }

      put:
        path: '/users/{id}'
        openapi_context:
          description: Update User resource.
          summary: Update User resource.
          operationId: put-v1-user-id
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true

      delete:
        path: '/users/{id}'
        controller: 'App\Controller\UserDeleteController'
        openapi_context:
          description: Delete an User resource.
          summary: Delete an User resource.
          operationId: delete-v1-user-id
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true

    collectionOperations:
      get:
        path: '/users'
        filters: ['entity.search_filter', 'entity.blameable_filter', 'entity.order_filter', 'created.at.order_filter', 'updated.at.order_filter']
        openapi_context:
          operationId: get-v1-users
          description:  Retrieve a collection of User resources.
          summary:  Retrieve a collection of User resources.
          parameters:
            - schema:
                type: integer
                minimum: 0
                format: int32
                default: 1
              in: query
              name: page
            - schema:
                type: string
                default: '10'
              in: query
              name: itemsPerPage
              description: The number of items per page
          responses:
            '200':
              description: OK
              content:
                application/ld+json:
                  examples:
              headers: { }
