---
resources:
  App\Entity\Playlist:
    attributes:
      input: App\Dto\PlaylistInput
      output: App\Dto\Playlist
    itemOperations:
      get:
        openapi_context:
          operationId: get-v1-playlist-id
          description: Retrieve a Playlist resource.
          summary: Retrieves a Playlist resource.
          tags:
            - Playlists
          parameters:
            - schema:
                type: string
                format: uuid
              name: id
              in: path
              required: true
          responses:
            '200':
              description: OK
              content:
                application/ld+json:
                  examples:
              headers: { }

      put:
        openapi_context:
          description: Update a Playlist resource.
          summary: Update a Playlist resource.
          operationId: put-v1-playlist-id
          tags:
            - Playlists
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true

      delete:
        openapi_context:
          description: Delete a Playlist resource.
          summary: Delete a Playlist resource.
          operationId: delete-v1-playlist-id
          tags:
            - Playlists
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true

      putSlide:
        method: PUT
        path: /playlists/{id}/slide/{slideId}
        controller: App\Controller\PlaylistSlidePutController
        read: false
        openapi_context:
          requestBody:
            content:
              application/ld+json:
                schema:
                  type: object
                  properties: { }
          operationId: put-v1-playlist-slide
          description: Link slide resource to playlist resource.
          summary: Link slide resource to playlist resource.
          tags:
            - Playlists
          parameters:
            - schema:
                type: string
                format: id
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true
            - schema:
                type: string
                format: id
                pattern: "^[A-Za-z0-9]{26}$"
              name: slideId
              in: path
              required: true

      deleteSlide:
        method: DELETE
        path: /playlists/{id}/slide/{slideId}
        controller: App\Controller\PlaylistSlideDeleteController
        read: false
        openapi_context:
          operationId: delete-v1-playlist-slide
          description: Unlink slide resource from playlist resource.
          summary: Unlink slide resource from playlist resource.
          tags:
            - Playlists
          parameters:
            - schema:
                type: string
                format: id
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true
            - schema:
                type: string
                format: id
                pattern: "^[A-Za-z0-9]{26}$"
              name: slideId
              in: path
              required: true

    collectionOperations:
      get:
        openapi_context:
          operationId: get-v1-playlists
          description: Retrieves a collection of Playlist resources.
          summary: Retrieve a collection of Playlist resources.
          tags:
            - Playlists
          parameters:
            - schema:
                type: integer
                minimum: 0
                format: int32
                default: 1
              in: query
              name: page
              required: true
          responses:
            '200':
              description: OK
              content:
                application/ld+json:
                  examples:
              headers: { }

      getBaseOnRegion:
        method: GET
        path: /screens/{id}/regions/{regionId}/playlists
        controller: App\Controller\PlaylistScreenRegionGetController
        read: false
        openapi_context:
          operationId: get-v1-playlist-screen-regions
          description: Retrieve a Playlist resources base on screen regions.
          summary: Retrieves a Playlist resources base on screen region.
          tags:
            - Screens
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: regionId
              in: path
              required: true
            - schema:
                type: integer
                minimum: 0
                format: int32
                default: 1
              in: query
              name: page
              required: true
            - schema:
                type: string
                default: '10'
              in: query
              name: itemsPerPage
              description: The number of items per page

      post:
        openapi_context:
          operationId: create-v1-playlist
          description: Creates a Playlist resource.
          summary: Creates a Playlist resource.
          tags:
            - Playlists
