security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true

    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        App\Entity\User: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

        screen_user_provider:
            entity:
                class: App\Entity\ScreenUser
                property: username

        user_provider:
            chain:
                providers: ['app_user_provider', 'screen_user_provider']

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login_screen:
            pattern: ^/v1/authentication/screen
            security: false
        login_oidc:
            pattern: ^/v1/authentication/oidc
            security: false
        api_token_refresh:
            pattern: ^/v1/authentication/token/refresh
            stateless: true
            refresh_jwt:
                provider: user_provider
        login:
            pattern: ^/v1/authentication/token
            stateless: true
            provider: user_provider
            json_login:
                check_path: /v1/authentication/token
                username_path: email
                password_path: password
                success_handler: Symfony\Component\Security\Http\Authentication\AuthenticationSuccessHandlerInterface
                failure_handler: Symfony\Component\Security\Http\Authentication\AuthenticationFailureHandlerInterface
        api:
            pattern: ^/v1/
            stateless: true
            provider: user_provider
            jwt:
                authenticator: app.tenant_scoped_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/v1/authentication, roles: PUBLIC_ACCESS }
        - { path: ^/v1/docs, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI
        - { path: ^/v1, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_SCREEN: ROLE_USER
        ROLE_EDITOR: ROLE_USER
        ROLE_ADMIN: ROLE_EDITOR
        ROLE_SUPER_ADMIN:   [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
