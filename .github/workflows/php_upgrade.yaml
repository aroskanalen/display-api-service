on: pull_request
name: Upgrade
jobs:
  test-composer-install:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: ["8.1"]
    name: Validate composer (PHP ${{ matrix.php}})
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Validate composer files
        run: composer validate composer.json --strict

      - name: '[prod] Composer install with exported .env variables'
        run: |
          set -a && source .env && set +a
          APP_ENV=prod composer install --no-dev -o --ignore-platform-reqs

      - name: Reset composer install
        run: rm -rf ./vendor

      - name: '[dev] Composer install with exported .env variables'
        run: |
          set -a && source .env && set +a
          APP_ENV=dev composer install --ignore-platform-reqs

      - name: Normalize composer files
        run: composer normalize --dry-run

  php-cs-fixer:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: ["8.1"]
    name: PHP Coding Standards Fixer (PHP ${{ matrix.php }})
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Update Dependencies
        run: composer update --ignore-platform-reqs

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist --ignore-platform-reqs

      - name: php-cs-fixer
        run: PHP_CS_FIXER_IGNORE_ENV=true phpdbg -qrr ./vendor/bin/php-cs-fixer fix --dry-run

  phpunit:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: ["8.0"]
    name: PHP Unit tests (PHP ${{ matrix.php }})
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress

      - name: Run tests
        run: bin/phpunit
