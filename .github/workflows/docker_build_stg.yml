---
on:
  push:
    branches:
      - 'develop'
name: Deployment (stg)

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      VERSION: alpha
      APP_VERSION: develop
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (API)
        uses: docker/build-push-action@v2
        with:
          context: ./infrastructure/display-api-service/
          file: ./infrastructure/display-api-service/Dockerfile
          build-args: |
            APP_VERSION=${{ env.APP_VERSION }}
          push: true
          tags: itkdev/os2display-api-service:${{ env.VERSION }}

      - name: Build and push (Nginx)
        uses: docker/build-push-action@v2
        with:
          context: ./infrastructure/nginx/
          file: ./infrastructure/nginx/Dockerfile
          build-args: |
            VERSION=${{ env.VERSION }}
          push: true
          tags: itkdev/os2display-api-service-nginx:${{ env.VERSION }}

  database:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ["8.0"]
    services:
      mariadb:
        image: mariadb:10.4
        env:
          MYSQL_USER: db
          MYSQL_PASSWORD: db
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    env:
      VERSION: alpha
      APP_VERSION: develop
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Install
        run: |
          set -a && source .env && set +a
          APP_ENV=dev composer install
          cp .docker/actions.env.local .env.local

      - name: Load fixtures
        run: |
          bin/console cache:clear
          bin/console doctrine:migrations:migrate --no-interaction
          composer run fixtures-load

      - name: Export database
        run: mysqldump --column-statistics=0 --opt --host=127.0.0.1 --user=db --password=db db > infrastructure/display-api-mariadb/db.sql

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (Database)
        uses: docker/build-push-action@v2
        with:
          context: ./infrastructure/display-api-mariadb/
          file: ./infrastructure/display-api-mariadb/Dockerfile
          build-args: |
            VERSION=${{ env.VERSION }}
          push: true
          tags: itkdev/os2display-api-mariadb:${{ env.VERSION }}
